var tipuesearch = {"pages": [{'title': 'About', 'text': '課程名稱: 電腦輔助設計與實習 \n 課程評分: \n 學習心得報告 (60%)  - MS Teams 線上參與，6人一組每三週發表學習心得。 \n w3、w7、w10、w14、w17、w18 \n 學習心得報告主題 : \n w3: 用什麼套件完成  5-bar Linkage Plotter  與  Openduck mini  零組件設計繪圖？  Solvespace ,  Siemens NX ,  Onshape  或其他？各有什麼優缺點？ ( plotter.7z ,  open_duck_mini.7z ) \n w7 ( 2a 採 Youtube 影片簡報 ):  5-bar Linkage Plotter  與  Openduck mini \xa0零組件設計繪製完成之後，如何切割零件? 為何要切割零件？ 如何利用  Webots  進行後續的控制系統設計與動態模擬 (Dynamic Simulation)？( plotter_project.7z ) \n w10:  Webots  是什麼？有什麼特點？ 如何進行場景模擬？ 如何用 Python 進行控制系統設計？ ( Tutorial ) \n w14:  Webots  的模型有沒有辦法用程式方法建立? 有沒有辦法直接從 CAD 套件中轉出  Webots  的場景模型？ \n w17: 如何實作一套  5-bar Linkage Plotter  與  Openduck mini ？( Disney Bipedal Robot ) \n w18: 課程總結 \n 個人與分組網站維護 (40%)  - 每週至少兩次推送與課程進度相關的學習內容與心得。 \n w9 期中自評、w18 期末自評 \n', 'tags': '', 'url': 'About.html'}, {'title': 'WH3', 'text': '', 'tags': '', 'url': 'WH3.html'}, {'title': '照片和影片', 'text': '\n 41323215 41323229 41323252負責openduck \n 41323251 41323234 41323245負責連桿機構 \n \n \n \n \n \n \xa0 \n 3D列印 遇到翹曲的問題 後來有改善 \n \n \n \n \n', 'tags': '', 'url': '照片和影片.html'}, {'title': '軟體選擇與分工', 'text': '此次課程我們選用SOLIDWORKS為主要設計軟體,NX為次要設計軟體,ONSHAPE的部分由於不熟悉,我們嘗試畫出一些零件,結果不盡人意,無法達到繪製如SOLIDWORKS和NX細緻,但我們還在嘗試使用ONSHAPE中。 \n WH3團隊分工:29負責OPENDUCK,SOLIDWORKS零件繪製,零件組合和動畫展示和3D列印和切片，Webots模擬。 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa052和15負責OPENDUCK,NX零件繪製和組裝。52負責3D列印和切片。 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa034,43,51負責連桿機構零件繪製和零件組合,組合3D列印零件。 \n', 'tags': '', 'url': '軟體選擇與分工.html'}, {'title': '設計方向', 'text': '我們參考網路上影片並結合chat gpt幫我們解決設計理論上的不足得出以下結論。 \n 筆尖 C 能畫滿一張 20 × 20 公分的紙 —— 換句話說，從中心算起，筆尖左右各能到 ±10 cm，上下也 ±10 cm。 \n 簡單的機械長度設定 \n 左右兩個馬達固定點 A、E 中間距離  𝑑=50 d=50 cm（所以 A 到中心是 25 cm）。 \n A 到 B（Link1）你給的是 67 cm（右邊的也一樣）。 \n 我們在想的就是中間那兩段（B→C 與 D→C），我把它們的長度都叫做𝐿 \n 想像 B 在 A 周圍繞一圈（半徑 67 cm），D 在 E 周圍繞一圈。為了讓 B 或 D 能「碰到」紙上任何一個 C 點，從 B（或 D）拉到 C 的那段L必須夠長。 \n 數字說明 \n 把中心當原點，最靠近 A 的紙上點是在左邊中間（那點離 A 只有 15 cm），最遠的點是在右上或右下角（那點離 A 大約 36.4 cm）。 所以當 B 在 A 邊上某個位置時，最需要的中間連桿長度會在這兩個情況下取最大值，計算結果是： \n 最短需要的  L（理論下界） =67−15=52 67−15=52 cm。 （也就是只要中間連桿至少 52 cm，理論上就能把筆尖到達整張 20×20 的紙上每一點。） \n 所以 110 cm 是怎樣？ \n 實務上，太長會有壞處：結構變笨重、容易彎曲或震動、需要更大功率的馬達去驅動，操控也會變難。 \n 如果想要安全但不笨重：選大約 60–65 cm 比較合適（比 52 cm 多一點裕度，但不至於像 110 cm 那麼長）。 \n 如果你有空間、對精度和慣性不在意，110 cm 也可以 \n 為什麼 Link1、Link4 是 67.27 cm？ \n 因為你一開始設計的三角形是 水平 50 cm、垂直 45 cm。 用畢氏定理算斜邊： \n 50 ² +45 ² ≈67.27\xa0cm 50 ² +45 ² ≈67.27\xa0cm \n 所以 Link1（A→B）跟 Link4（E→D）就是 67.27 cm。 \n \n 筆尖要畫滿一張 20 × 20 cm 的紙。 這代表筆尖要能跑到： \n 左右各 10 cm \n 上下各 10 cm \n 所以中間的連桿（B→C、D→C）要夠長，才有辦法連到紙上所有角落。 \n 算出來的「最少需要」 52 cm。 如果只做到剛剛好，可能會卡住或角度很難調。 \n', 'tags': '', 'url': '設計方向.html'}, {'title': '心得-1', 'text': '41323229: \n 對於我而言SOLVESPACE 優點 適用於設計簡單的機械連桿機構， 缺點 功能較為基礎。 \n NX 優點 可以用來分析且可繪製較難的零件 缺點 要繪製曲線面等對我來說是個挑戰。 \n SOLIDWORKS 優點 我比較熟悉用了三年繪製比較快速 缺點 無法像 ONSHAPE 能協同。 \n 總而言之SOLIDWORKS在操作介面與零件細節呈現上較為直觀，NX則在組裝與精密控制方面有其優勢，而ONSHAPE的雲端特性與操作邏輯仍需要時間適應。 \n 本次課程不僅增進了我對SOLIDWORKS與NX的熟練度，也提升了團隊協作能力，同時，我也認識到ONSHAPE的潛力與挑戰，期待未來能將更多軟體工具融入設計流程中，提升整體設計效率與精確度。 \n', 'tags': '', 'url': '心得-1.html'}, {'title': 'WH4', 'text': '第四週由於全部組員帳號被封鎖，所以未更新第四週進度。測試。 \n', 'tags': '', 'url': 'WH4.html'}, {'title': 'WH5', 'text': '第五週由於全部組員帳號被封鎖，所以未更新第五週進度。測試。 \n', 'tags': '', 'url': 'WH5.html'}, {'title': 'WH6', 'text': '第六週進度。 \n', 'tags': '', 'url': 'WH6.html'}, {'title': '機器人零件照片', 'text': '41323229機器人已完成 \n \n \n \n \n 41323252 NX機器人 \n \n \n \n', 'tags': '', 'url': '機器人零件照片.html'}, {'title': 'webots模擬', 'text': '這是我第五週上課時在在課堂上做的 Webots模擬圖41323229 \n \n 41323229心得 : 這是課後練習老師上課講的內容目前進度到這裡，到這裡除了本來就會的繪圖技能，我還學會了webots的添加競技場、牆壁、障礙物和 e-puck 機器人等等，有助於模擬動態。 \n \n', 'tags': '', 'url': 'webots模擬.html'}, {'title': '連桿機構動畫', 'text': '連趕機構 \n \n', 'tags': '', 'url': '連桿機構動畫.html'}, {'title': 'WH7', 'text': '', 'tags': '', 'url': 'WH7.html'}, {'title': '心得-2', 'text': '', 'tags': '', 'url': '心得-2.html'}]};